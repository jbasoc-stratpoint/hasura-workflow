version: "3.7"
services:
  redis:
    image: redis:7
    restart: always
    # ports:
    #   - 6379:6379
  postgres:
    image: postgres:15

    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 10s
      timeout: 5s
      retries: 25
  mongodb:
    image: mongo:7.0
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: mongopassword
  hasura:
    image: hasura/graphql-engine:v2.37.1.cli-migrations-v3
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
      - ./seeds:/hasura-seeds
      - ./config.yaml:/etc/hasura/config.yaml
    environment:
      ## Add your license key below
      # HASURA_GRAPHQL_EE_LICENSE_KEY: ""
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecret
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "7799bf9aedc9690c8c82cd101ebf8da5" }'
      ## The metadata database for this Hasura GraphQL project. Can be changed to a managed postgres instance
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres

      ## Optional settings
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      ## enable required apis; metrics api exposes a prometheus endpoint, uncomment to enable
      HASURA_GRAPHQL_ENABLED_APIS: 'graphql,metadata,config,developer,pgdump,metrics'
      ## secure metrics endpoint with a secret, uncomment to enable
      HASURA_GRAPHQL_METRICS_SECRET: hasura
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: http-log,query-log,startup,webhook-log,websocket-log
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_LOG_LEVEL: info
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: "/srv/console-assets"
      HASURA_GRAPHQL_REDIS_URL: redis://redis:6379
      HASURA_GRAPHQL_RATE_LIMIT_REDIS_URL: "redis://redis:6379"
      HASURA_GRAPHQL_CACHE_MAX_ENTRY_SIZE: "200"
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"Mongo":{"uri":"http://mongo-data-connector:3000"}}}}'
    depends_on:
      postgres:
        condition: service_healthy
  #migration-seed:
  #  image: hasura/graphql-engine:v2.37.1.cli-migrations-v3
  #  command: bash -c "hasura migrate apply  --admin-secret myadminsecret && hasura seed apply --admin-secret myadminsecret"
  #  volumes:
  #    - ./migrations:/hasura-migrations
  #    - ./config.yaml:/etc/hasura/config.yaml
  #    - ./seeds:/hasura-seeds
  #  environment:
  #    HASURA_GRAPHQL_SERVER_PORT: "8080"
  #    HASURA_GRAPHQL_DATABASE_URL: "your_database_url_here"
  #    HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # Disable Hasura console
  #    HASURA_GRAPHQL_ENABLE_TELEMETRY: "false" # Disable telemetry if needed
  mongo-data-connector:
    image: hasura/mongo-data-connector:v2.37.0
    ports:
      - 3002:3000
    environment:
      HASURA_GRAPHQL_ENGINE_URL: http://hasura:8080
  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: myadmin
      GF_SECURITY_ADMIN_PASSWORD: myadminpass
  nodejs-app:
    build:
      context: ./backend
    restart: always
    ports:
      - '4000:4000'
    depends_on:
      - hasura
  nextjs-app:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    depends_on:
      - hasura
volumes:
  logs:
  prometheus-data:
  db_data:
  mongo_data:
    driver: local
