version: '3.6'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - hasura
    ports:
      - 5432:5432
    volumes:
      - ./init/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./init/init.sql:/var/tmp/init.sql

  hasura:
    image: hasura/graphql-engine:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    stop_grace_period: 1s
    volumes:
      - logs:/tmp/log
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecret
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "7799bf9aedc9690c8c82cd101ebf8da5" }'
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
      HASURA_GRAPHQL_ENABLED_APIS: config,graphql,metadata,metrics
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: http-log,query-log,startup,webhook-log,websocket-log
      HASURA_GRAPHQL_LOG_LEVEL: info 
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_METRICS_SECRET: hasura
    networks:
      - hasura

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - hasura

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: myadmin
      GF_SECURITY_ADMIN_PASSWORD: myadminpass
    networks:
      - hasura

  nodejs-app:
    build:
      context: ./backend
    restart: always
    ports:
      - '4000:4000'
    networks:
      - hasura  
    depends_on:
      - hasura

  nextjs-app:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    networks:
      - hasura
    depends_on:
      - hasura

networks:
  hasura:

volumes:
  logs:
  prometheus-data: